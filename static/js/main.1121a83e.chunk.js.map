{"version":3,"sources":["components/CountBoard/CountBoard.module.css","App.module.css","components/Button/Button.module.css","components/Button/Button.tsx","components/CountBoard/CountBoard.tsx","App.tsx","index.tsx"],"names":["module","exports","Button","props","onClick","buttonFunction","disabled","disabledButton","value","className","s","button","title","CountBoard","board","maxValue","maxInc","App","useState","setValue","counter","buttons","ReactDOM","render","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,MAAQ,0BAA0B,OAAS,6B,gBCA/FD,EAAOC,QAAU,CAAC,QAAU,qBAAqB,MAAQ,mBAAmB,QAAU,uB,kBCAtFD,EAAOC,QAAU,CAAC,OAAS,yB,yMCQdC,EAAoC,SAACC,GAC9C,OACI,6BACI,4BAAQC,QAASD,EAAME,eAAgBC,SAAUH,EAAMI,eAAeJ,EAAMK,OACpEC,UAAWC,IAAEC,QAASR,EAAMS,S,gBCNnCC,EAA4C,SAACV,GACtD,OACQ,yBAAKM,UAAWC,IAAEI,OACd,yBAAKL,UAAYN,EAAMK,QAAUL,EAAMY,SAAYL,IAAEM,OAASN,IAAEF,OAAQL,EAAMK,SCJjFS,EAAgB,WAAO,IAAD,EACLC,mBAAiB,GADZ,mBACxBV,EADwB,KACjBW,EADiB,KAa/B,OACI,yBAAKV,UAAWC,IAAEU,SACd,kBAAC,EAAD,CAAYZ,MAAOA,EAAOO,SAZT,IAajB,yBAAKN,UAAWC,IAAEW,SACd,kBAAC,EAAD,CAAQT,MAAO,MAAOP,eAZlB,WACXG,GAJoB,GAICA,EAHD,GAGsBW,EAASX,EAAM,IAWHA,MAAOA,EAAOD,eAP/C,SAACC,GAAD,SAAsBA,GAAmB,IAAVA,MAQ7C,kBAAC,EAAD,CAAQI,MAAO,QAASP,eAVpB,WAAOc,EAAS,IAU6BX,MAAOA,EAAOD,eAPjD,SAACC,GAAD,OAAoBA,QCZlDc,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.1121a83e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"CountBoard_board__1Ey4P\",\"value\":\"CountBoard_value__B3nkJ\",\"maxInc\":\"CountBoard_maxInc__1zliG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"App_counter__VoYb2\",\"board\":\"App_board__1euYz\",\"buttons\":\"App_buttons__y3Ncu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__S3pkw\"};","import React from \"react\"\r\nimport s from './Button.module.css'\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    buttonFunction: () => void\r\n    value: number\r\n    disabledButton: (value: number) => boolean\r\n}\r\nexport const Button: React.FC<ButtonPropsType> = (props: ButtonPropsType) => {\r\n    return (\r\n        <div>\r\n            <button onClick={props.buttonFunction} disabled={props.disabledButton(props.value)}\r\n                    className={s.button}>{props.title}</button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './CountBoard.module.css'\r\n\r\ntype CountBoardPropsType = {\r\n    value: number\r\n    maxValue: number\r\n}\r\nexport const CountBoard: React.FC<CountBoardPropsType> = (props: CountBoardPropsType) => {\r\n    return (\r\n            <div className={s.board}>\r\n                <div className={(props.value === props.maxValue) ? s.maxInc : s.value}>{props.value}</div>\r\n            </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\nimport s from './App.module.css'\nimport './App.css'\nimport {Button} from \"./components/Button/Button\"\nimport {CountBoard} from \"./components/CountBoard/CountBoard\"\n\nexport const App: React.FC = () => {\n    const [value, setValue] = useState<number>(0)\n    const minValue: number = 0\n    const maxValue: number = 5\n\n    const incFunc = () => {\n        (value >= minValue && value < maxValue) && setValue(value+1)\n    }\n    const resFunc = () => {setValue(0)}\n\n    const disabledIncButton = (value: number) => !!(value && value === 5)\n    const disabledResButton = (value: number) => !value\n\n    return (\n        <div className={s.counter}>\n            <CountBoard value={value} maxValue={maxValue}/>\n            <div className={s.buttons}>\n                <Button title={'inc'} buttonFunction={incFunc} value={value} disabledButton={disabledIncButton}/>\n                <Button title={'reset'} buttonFunction={resFunc} value={value} disabledButton={disabledResButton}/>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}